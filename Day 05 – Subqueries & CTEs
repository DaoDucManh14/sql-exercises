/* Exercise 1:
Using the DimProduct table, display the minimum, maximum, and average ListPrice of all products.
*/

SELECT 
    MIN(ListPrice) AS MinPrice,
    MAX(ListPrice) AS MaxPrice,
    AVG(ListPrice) AS AvgPrice
FROM DimProduct;

--------------------------------------------------------------------------------

/* Exercise 2:
Determine the number of unique products that have been sold in the FactInternetSales table.
*/

SELECT COUNT(DISTINCT ProductKey) AS TotalProduct
FROM FactInternetSales;

--------------------------------------------------------------------------------

/* Exercise 3:
The company is launching a loyalty program for customers who spent more than $5000 in a year.  
From the FactInternetSales table, retrieve a list of qualified customers and their corresponding year.
*/

SELECT 
    CustomerKey,
    SUM(SalesAmount) AS TotalAmount,
    YEAR(OrderDate) AS OrderYear
FROM FactInternetSales
GROUP BY CustomerKey, YEAR(OrderDate)
HAVING SUM(SalesAmount) > 5000;

--------------------------------------------------------------------------------

/* Exercise 4:
From the DimEmployee table, calculate the average BaseRate for each job Title in the company.
*/

SELECT
    Title,
    AVG(BaseRate) AS AverageBaseRate
FROM DimEmployee
GROUP BY Title;

--------------------------------------------------------------------------------

/* Exercise 5:
From the FactInternetSales table, calculate the total quantity sold (OrderQuantity)  
for each ProductKey on each OrderDate.
*/

SELECT
    ProductKey,
    SUM(OrderQuantity) AS TotalOrderQuantity,
    OrderDate
FROM FactInternetSales
GROUP BY ProductKey, OrderDate;

--------------------------------------------------------------------------------

/* Exercise 6:
Using DimProduct, FactInternetSales, DimProductSubcategory, and DimProductCategory tables:  
- Filter for orders placed in 2012  
- Group by ProductCategory  
- Calculate TotalRevenue (from SalesAmount), TotalCost (from TotalProductCost), and TotalProfit  
- Only return categories with TotalRevenue > 5000
*/

SELECT
    DPcate.ProductCategoryKey,
    DPcate.EnglishProductCategoryName,
    SUM(SalesAmount) AS TotalRevenue,
    SUM(TotalProductCost) AS TotalCost,
    SUM(SalesAmount) - SUM(TotalProductCost) AS TotalProfit
FROM FactInternetSales AS FIS
LEFT JOIN DimProduct AS DP ON FIS.ProductKey = DP.ProductKey
LEFT JOIN DimProductSubcategory AS DPS ON DP.ProductSubcategoryKey = DPS.ProductSubcategoryKey
LEFT JOIN DimProductCategory AS DPcate ON DPS.ProductCategoryKey = DPcate.ProductCategoryKey
WHERE YEAR(FIS.OrderDate) = 2012
GROUP BY DPcate.ProductCategoryKey, DPcate.EnglishProductCategoryName
HAVING SUM(SalesAmount) > 5000;

--------------------------------------------------------------------------------

/* Exercise 7:
From FactInternetSales and DimProduct,  
create a new column Color_group:  
- If Color is 'Black' or 'Silver' → set to 'Basic'  
- Otherwise → keep the original Color value  
Then calculate total revenue (SalesAmount) per Color_group.
*/

SELECT
    CASE
        WHEN Color IN ('BLACK', 'SILVER') THEN 'BASIC'
        ELSE Color
    END AS Color_group,
    SUM(FIS.SalesAmount) AS TotalRevenue
FROM FactInternetSales AS FIS
LEFT JOIN DimProduct AS DP ON FIS.ProductKey = DP.ProductKey
GROUP BY 
    CASE
        WHEN Color IN ('BLACK', 'SILVER') THEN 'BASIC'
        ELSE Color
    END;

--------------------------------------------------------------------------------

/* Exercise 8 (Advanced):
Using FactInternetSales and FactResellerSales:  
Calculate monthly revenue (SalesAmount) for each sales channel (Internet and Reseller).  
The result should include: Year, Month, Internet_Sales, Reseller_Sales.  
Use CTEs for monthly aggregation in each table, then combine using FULL JOIN.
*/

WITH InternetSales_CTE AS (
    SELECT
        YEAR(OrderDate) AS Year,
        MONTH(OrderDate) AS Month,
        SUM(SalesAmount) AS Internet_Sales
    FROM FactInternetSales
    GROUP BY YEAR(OrderDate), MONTH(OrderDate)
),
ResellerSales_CTE AS (
    SELECT
        YEAR(OrderDate) AS Year,
        MONTH(OrderDate) AS Month,
        SUM(SalesAmount) AS Reseller_Sales
    FROM FactResellerSales
    GROUP BY YEAR(OrderDate), MONTH(OrderDate)
)
SELECT
    COALESCE(I.Year, R.Year) AS Year,
    COALESCE(I.Month, R.Month) AS Month,
    Internet_Sales,
    Reseller_Sales
FROM InternetSales_CTE AS I
FULL JOIN ResellerSales_CTE AS R
    ON I.Year = R.Year AND I.Month = R.Month;
