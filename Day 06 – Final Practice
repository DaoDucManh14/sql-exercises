/* Exercise 1:
Based on the FactInternetSales table,  
calculate the total number of products sold (OrderQuantity) for each customer (CustomerKey).  
Display the results in descending order of total quantity.
*/

SELECT
    CustomerKey,
    SUM(OrderQuantity) AS TotalQuantity
FROM FactInternetSales
GROUP BY CustomerKey
ORDER BY TotalQuantity DESC;

--------------------------------------------------------------------------------

/* Exercise 2:
Using the FactInternetSales and DimProduct tables,  
calculate the total number of products sold (TotalOrderQuantity) for each product (EnglishProductName).  
Display the results in descending order of TotalOrderQuantity.
*/

SELECT
    EnglishProductName,
    SUM(OrderQuantity) AS TotalOrderQuantity
FROM FactInternetSales AS FIS
JOIN DimProduct AS DP
    ON FIS.ProductKey = DP.ProductKey
GROUP BY EnglishProductName
ORDER BY TotalOrderQuantity DESC;

--------------------------------------------------------------------------------

/* Exercise 3:
From the FactInternetSales and DimCustomer tables,  
create a FullName column by concatenating FirstName, MiddleName, and LastName with spaces.  
Count the number of orders (OrderCount) each customer made in 2014,  
and only display customers with at least 2 orders.
*/

SELECT
    YEAR(OrderDate) AS Year,
    COUNT(*) AS OrderCount,
    CONCAT_WS(' ', FirstName, MiddleName, LastName) AS FullName
FROM FactInternetSales AS FIS
JOIN DimCustomer AS DC
    ON FIS.CustomerKey = DC.CustomerKey
WHERE YEAR(OrderDate) = 2014
GROUP BY FirstName, MiddleName, LastName, OrderDate
HAVING COUNT(*) >= 2
ORDER BY OrderCount ASC;

--------------------------------------------------------------------------------

/* Exercise 4:
Using the DimProduct, DimProductSubcategory, DimProductCategory, and FactInternetSales tables,  
retrieve EnglishProductCategoryName and the total sales amount (TotalAmount)  
for the top 2 product categories with the highest revenue in the year 2014.
*/

SELECT TOP 2
    DPC.EnglishProductCategoryName,
    SUM(FIS.SalesAmount) AS TotalAmount
FROM FactInternetSales AS FIS
JOIN DimProduct AS DP
    ON FIS.ProductKey = DP.ProductKey
JOIN DimProductSubcategory AS DPS
    ON DP.ProductSubcategoryKey = DPS.ProductSubcategoryKey
JOIN DimProductCategory AS DPC
    ON DPS.ProductCategoryKey = DPC.ProductCategoryKey
WHERE YEAR(OrderDate) = 2014
GROUP BY DPC.EnglishProductCategoryName
ORDER BY SUM(FIS.SalesAmount) DESC;

--------------------------------------------------------------------------------

/* Exercise 5:
From the FactInternetSales and FactResellerSales tables,  
retrieve all SalesOrderNumbers and corresponding revenue (SalesAmount)  
from both Internet and Reseller sales sources.
*/

SELECT
    SalesOrderNumber,
    SalesAmount
FROM FactInternetSales
UNION ALL
SELECT
    SalesOrderNumber,
    SalesAmount
FROM FactResellerSales
ORDER BY SalesAmount DESC;

--------------------------------------------------------------------------------

/* Exercise 6:
Using the DimDepartmentGroup and FactFinance tables,  
retrieve the total amount (TotalAmount) based on Amount,  
grouped by DepartmentGroupName and ParentDepartmentGroupName.
*/

SELECT
    DPG.DepartmentGroupName,
    PDPG.DepartmentGroupName AS ParentDepartmentGroupName,
    SUM(Amount) AS TotalAmount
FROM FactFinance AS FF
LEFT JOIN DimDepartmentGroup AS DPG
    ON FF.DepartmentGroupKey = DPG.DepartmentGroupKey
LEFT JOIN DimDepartmentGroup AS PDPG
    ON DPG.ParentDepartmentGroupKey = PDPG.DepartmentGroupKey
GROUP BY DPG.DepartmentGroupName, PDPG.DepartmentGroupName;
