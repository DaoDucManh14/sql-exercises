/* Exercise 1:  
From the tables dbo.DimProduct, dbo.DimPromotion, and dbo.FactInternetSales,  
retrieve ProductKey and EnglishProductName for records where DiscountPct is greater than or equal to 20%.
*/

SELECT 
    DP.ProductKey, 
    DP.EnglishProductName 
FROM FactInternetSales AS FIS 
JOIN DimProduct AS DP 
    ON FIS.ProductKey = DP.ProductKey 
JOIN DimPromotion AS DPR 
    ON FIS.PromotionKey = DPR.PromotionKey 
WHERE DiscountPct >= 0.2;

--------------------------------------------------------------------------------

/* Exercise 2:  
From the tables DimProduct, DimProductSubcategory, and DimProductCategory,  
retrieve ProductKey, EnglishProductName, EnglishProductSubCategoryName, and EnglishProductCategoryName  
for products where EnglishProductCategoryName is 'Clothing'.
*/

SELECT
    DP.ProductKey, 
    DP.EnglishProductName, 
    DPS.EnglishProductSubcategoryName, 
    DPC.EnglishProductCategoryName 
FROM DimProduct AS DP 
JOIN DimProductSubcategory AS DPS 
    ON DP.ProductSubcategoryKey = DPS.ProductSubcategoryKey 
JOIN DimProductCategory AS DPC 
    ON DPS.ProductCategoryKey = DPC.ProductCategoryKey 
WHERE EnglishProductCategoryName = 'Clothing';

--------------------------------------------------------------------------------

/* Exercise 3:  
From the FactInternetSales and DimProduct tables,  
retrieve ProductKey, EnglishProductName, and ListPrice  
for products that have never been sold.  

Use two approaches:  
1. The NOT IN operator  
2. LEFT JOIN with IS NULL  
*/

-- Method 1: Using NOT IN
SELECT
    ProductKey,
    EnglishProductName,
    ListPrice
FROM DimProduct
WHERE ProductKey NOT IN (
    SELECT ProductKey
    FROM FactInternetSales
);

-- Method 2: Using LEFT JOIN and IS NULL
SELECT
    DP.ProductKey,
    DP.EnglishProductName,
    DP.ListPrice
FROM DimProduct AS DP
LEFT JOIN FactInternetSales AS FIS
    ON DP.ProductKey = FIS.ProductKey
WHERE FIS.ProductKey IS NULL;

--------------------------------------------------------------------------------

/* Exercise 4:  
From the DimDepartmentGroup table,  
retrieve DepartmentGroupKey, DepartmentGroupName, and ParentDepartmentGroupKey.  
Perform a self-join to also retrieve ParentDepartmentGroupName.
*/

SELECT
    CHILD.DepartmentGroupKey,
    CHILD.ParentDepartmentGroupKey,
    CHILD.DepartmentGroupName,
    PARENT.DepartmentGroupName AS ParentDepartmentGroupName
FROM DimDepartmentGroup AS CHILD
LEFT JOIN DimDepartmentGroup AS PARENT
    ON CHILD.ParentDepartmentGroupKey = PARENT.DepartmentGroupKey;

--------------------------------------------------------------------------------

/* Exercise 5:  
From the FactFinance, DimOrganization, and DimScenario tables,  
retrieve OrganizationKey, OrganizationName, ParentOrganizationKey, Parent OrganizationName, and Amount  
for records where ScenarioName is 'Actual'.
*/

SELECT
    DO.OrganizationKey,
    DO.OrganizationName,
    DO.ParentOrganizationKey,
    PDO.OrganizationName AS ParentOrganizationName,
    FF.Amount
FROM FactFinance AS FF
LEFT JOIN DimScenario AS DS
    ON FF.ScenarioKey = DS.ScenarioKey
LEFT JOIN DimOrganization AS DO
    ON FF.OrganizationKey = DO.OrganizationKey
LEFT JOIN DimOrganization AS PDO
    ON DO.ParentOrganizationKey = PDO.OrganizationKey
WHERE DS.ScenarioName = 'Actual';
